# Test jobs generated by build_jobs.py (do not manually edit)
# 27 jobs, total of 651 runs per week
periodics:

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-scenario-arm64
  cron: '33 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-arm64-server-20211001' --channel=alpha --networking=kubenet --container-runtime=containerd --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004arm64, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-arm64

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64", "feature_flags": "AWSIPv6", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-scenario-ipv6-conformance
  cron: '49 7-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=calico --container-runtime=containerd --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64" \
          --env=KOPS_FEATURE_FLAGS=AWSIPv6 \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64
    test.kops.k8s.io/feature_flags: AWSIPv6
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-ipv6, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-ipv6-conformance

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64", "feature_flags": "AWSIPv6", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-scenario-ipv6-calico
  cron: '59 2-23/4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=calico --container-runtime=containerd --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64" \
          --env=KOPS_FEATURE_FLAGS=AWSIPv6 \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64
    test.kops.k8s.io/feature_flags: AWSIPv6
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-ipv6, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '47'
    testgrid-tab-name: kops-grid-scenario-ipv6-calico

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64", "feature_flags": "AWSIPv6", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-scenario-ipv6-cilium
  cron: '9 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=cilium --container-runtime=containerd --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64" \
          --env=KOPS_FEATURE_FLAGS=AWSIPv6 \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64
    test.kops.k8s.io/feature_flags: AWSIPv6
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-ipv6, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-ipv6-cilium

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64 --set=cluster.spec.podCIDRFromCloud=true", "feature_flags": "AWSIPv6", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-scenario-ipv6-cilium-cloudipam
  cron: '50 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=cilium --container-runtime=containerd --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64 --set=cluster.spec.podCIDRFromCloud=true" \
          --env=KOPS_FEATURE_FLAGS=AWSIPv6 \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --ipv6 --api-loadbalancer-type=public --api-loadbalancer-class=network --zones=eu-west-1a --set=cluster.spec.api.loadBalancer.useForInternalApi=true --set=cluster.spec.cloudControllerManager.cloudProvider=aws --set=cluster.spec.nonMasqueradeCIDR=fd00:10:96::/64 --set=cluster.spec.podCIDRFromCloud=true
    test.kops.k8s.io/feature_flags: AWSIPv6
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-ipv6, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-ipv6-cilium-cloudipam

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--api-loadbalancer-type=public --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/e2e-dc69f71486-5831d.test-cncf-aws.k8s.io/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true --override=cluster.spec.iam.useServiceAccountExternalPermissions=true", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-scenario-service-account-iam
  cron: '45 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=kubenet --container-runtime=containerd --api-loadbalancer-type=public --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/e2e-dc69f71486-5831d.test-cncf-aws.k8s.io/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true --override=cluster.spec.iam.useServiceAccountExternalPermissions=true" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --api-loadbalancer-type=public --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/e2e-dc69f71486-5831d.test-cncf-aws.k8s.io/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true --override=cluster.spec.iam.useServiceAccountExternalPermissions=true
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-service-account-iam

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--api-loadbalancer-type=public --override=cluster.spec.warmPool.minSize=1", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-warm-pool
  cron: '54 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=cilium --container-runtime=containerd --api-loadbalancer-type=public --override=cluster.spec.warmPool.minSize=1" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --api-loadbalancer-type=public --override=cluster.spec.warmPool.minSize=1
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-warm-pool

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--override=cluster.spec.cloudControllerManager.cloudProvider=aws", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-scenario-aws-cloud-controller-manager
  cron: '28 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=kubenet --container-runtime=containerd --override=cluster.spec.cloudControllerManager.cloudProvider=aws" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --override=cluster.spec.cloudControllerManager.cloudProvider=aws
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-ci, kops-latest, kops-misc, provider-aws-cloud-provider-aws, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-aws-cloud-controller-manager

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--override=cluster.spec.cloudControllerManager.cloudProvider=aws --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/kops-grid-scenario-aws-cloud-controller-manager-irsa/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true --override=cluster.spec.iam.useServiceAccountExternalPermissions=true", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-scenario-aws-cloud-controller-manager-irsa
  cron: '39 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=kubenet --container-runtime=containerd --override=cluster.spec.cloudControllerManager.cloudProvider=aws --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/kops-grid-scenario-aws-cloud-controller-manager-irsa/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true --override=cluster.spec.iam.useServiceAccountExternalPermissions=true" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --override=cluster.spec.cloudControllerManager.cloudProvider=aws --override=cluster.spec.serviceAccountIssuerDiscovery.discoveryStore=s3://k8s-kops-prow/kops-grid-scenario-aws-cloud-controller-manager-irsa/discovery --override=cluster.spec.serviceAccountIssuerDiscovery.enableAWSOIDCProvider=true --override=cluster.spec.iam.useServiceAccountExternalPermissions=true
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-ci, kops-latest, kops-misc, provider-aws-cloud-provider-aws, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-aws-cloud-controller-manager-irsa

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--zones=us-west-1a", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-grid-scenario-terraform
  cron: '14 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=kubenet --container-runtime=containerd --zones=us-west-1a" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --terraform-version=1.0.5 \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --zones=us-west-1a
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-1.20, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-terraform

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-misc-ha-euwest1
  cron: '24 1-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=calico --container-runtime=containerd --master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --master-count=3 --zones=eu-west-1a,eu-west-1b,eu-west-1c
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-misc-ha-euwest1

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-misc-arm64-release
  cron: '54 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-arm64-server-20211001' --channel=alpha --networking=calico --container-runtime=containerd --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004arm64, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-misc-arm64-release

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-misc-arm64-ci
  cron: '30 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-arm64-server-20211001' --channel=alpha --networking=calico --container-runtime=containerd --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004arm64, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-misc-arm64-ci

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-misc-arm64-conformance
  cron: '31 0-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-arm64-server-20211001' --channel=alpha --networking=calico --container-runtime=containerd --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Flaky\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004arm64, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-misc-arm64-conformance

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=c5.large --master-size=c5.large", "k8s_version": "ci", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-aws-misc-amd64-conformance
  cron: '24 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=kubenet --container-runtime=containerd --node-size=c5.large --master-size=c5.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/k8s-release-dev/ci/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-bucket=k8s-release-dev \
          --test-package-dir=ci \
          --test-package-marker=latest.txt \
          --focus-regex="\[Conformance\]|\[NodeConformance\]" \
          --skip-regex="\[Slow\]|\[Serial\]|\[Flaky\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=c5.large --master-size=c5.large
    test.kops.k8s.io/k8s_version: ci
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-ci, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-misc-amd64-conformance

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--node-size=c5.large --master-size=c5.large", "k8s_version": "stable", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-aws-misc-updown
  cron: '16 0-23/1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=calico --container-runtime=containerd --node-size=c5.large --master-size=c5.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci.txt \
          --publish-version-marker=gs://kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable.txt \
          --focus-regex="\[k8s.io\]\sNetworking.*\[Conformance\]" \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --node-size=c5.large --master-size=c5.large
    test.kops.k8s.io/k8s_version: stable
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-stable, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '11'
    testgrid-tab-name: kops-aws-misc-updown

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004arm64", "extra_flags": "--zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-scenario-cilium10-arm64
  cron: '25 13-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-arm64-server-20211001' --channel=alpha --networking=cilium --container-runtime=containerd --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004arm64
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --node-size=m6g.large --master-size=m6g.large
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004arm64, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-cilium10-arm64

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--zones=eu-central-1a --override=cluster.spec.networking.cilium.version=v1.10.0-rc2", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-scenario-cilium10-amd64
  cron: '39 19-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=cilium --container-runtime=containerd --zones=eu-central-1a --override=cluster.spec.networking.cilium.version=v1.10.0-rc2" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --zones=eu-central-1a --override=cluster.spec.networking.cilium.version=v1.10.0-rc2
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-scenario-cilium10-amd64

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-aws-ebs-csi-driver
  cron: '42 4-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/aws-ebs-csi/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-7b1ad13b6b-b5650.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-aws-ebs-csi-driver

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--override=cluster.spec.iam.useServiceAccountExternalPermissions=true", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-aws-ebs-csi-driver-irsa
  cron: '22 1-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/aws-ebs-csi/run-test.sh
      env:
      - name: KOPS_IRSA
        value: "true"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-fcfb5423d5-69c63.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --override=cluster.spec.iam.useServiceAccountExternalPermissions=true
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-aws-ebs-csi-driver-irsa

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.21", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-aws-load-balancer-controller
  cron: '37 21-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/aws-lb-controller/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-4342699135-9b4dd.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.21'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-1.21, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-aws-load-balancer-controller

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.21", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-aws-load-balancer-controller-irsa
  cron: '13 3-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/aws-lb-controller/run-test.sh
      env:
      - name: KOPS_IRSA
        value: "true"
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-d623e0867e-4e66e.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.21'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-1.21, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-aws-load-balancer-controller-irsa

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-aws-keypair-rotation
  cron: '1 19-23/24 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 150m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/keypair-rotation/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-dc9e19fb9a-ad003.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-keypair-rotation

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-metrics-server
  cron: '42 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - ./tests/e2e/scenarios/metrics-server/run-test.sh
      env:
      - name: CLOUD_PROVIDER
        value: "aws"
      - name: CLUSTER_NAME
        value: "e2e-127cbce38e-b114d.test-cncf-aws.k8s.io"
      - name: KOPS_STATE_STORE
        value: "s3://k8s-kops-prow"
      - name: KUBE_SSH_USER
        value: "ubuntu"
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 6Gi
        requests:
          cpu: "2"
          memory: 6Gi
      securityContext:
        privileged: true
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-metrics-server

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--override=cluster.spec.externalDns.provider=external-dns", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-external-dns
  cron: '25 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=cilium --container-runtime=containerd --override=cluster.spec.externalDns.provider=external-dns" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --override=cluster.spec.externalDns.provider=external-dns
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-external-dns

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "extra_flags": "--override=cluster.spec.externalDns.provider=external-dns --override=cluster.spec.iam.useServiceAccountExternalPermissions=true", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-aws-external-dns-irsa
  cron: '40 2-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=cilium --container-runtime=containerd --override=cluster.spec.externalDns.provider=external-dns --override=cluster.spec.iam.useServiceAccountExternalPermissions=true" \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/extra_flags: --override=cluster.spec.externalDns.provider=external-dns --override=cluster.spec.iam.useServiceAccountExternalPermissions=true
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-external-dns-irsa

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "feature_flags": "APIServerNodes", "k8s_version": "latest", "kops_channel": "alpha", "kops_version": null, "networking": "kubenet"}
- name: e2e-kops-aws-apiserver-nodes
  cron: '19 6-23/8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20211001' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS=APIServerNodes \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/latest.txt \
          --template-path=/home/prow/go/src/k8s.io/kops/tests/e2e/templates/apiserver.yaml.tmpl \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=latest.txt \
          --parallel=25
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20211014-794b7e0910-master
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/feature_flags: APIServerNodes
    test.kops.k8s.io/k8s_version: latest
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kubenet
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-k8s-latest, kops-latest, kops-misc, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-aws-apiserver-nodes
